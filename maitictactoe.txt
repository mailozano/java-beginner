/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tictactoegame;

/**
 *
 * @author maryme
 */
public class TicTacToeGame {
    static int[][] gameboard;
    static final int EMPTY = 0;
    static final int NOUGHT = -1; // X player
    static final int CROSS = 1; //O Player
    

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        createBoard(3,3);
        int turn = 0;
        int playerVal;
        int outcome;
        java.util.Scanner scan = new 
        java.util.Scanner(System.in);
        do {
            displayBoard();
            playerVal = (turn % 2 == 0)? NOUGHT : CROSS;
            if (playerVal == NOUGHT) System.out.println("\n--0's turn--");
            else System.out.println("\n--X's turn--");
            System.out.println("Enter row and column:");
            try {
                set(playerVal, scan.nextInt(), scan.nextInt());
            } catch (Exception ex)
            {System.err.println(ex);}
            turn ++;
            outcome = winOrTie();
} while ( outcome == -2 );
    displayBoard();
    switch (outcome) {
    case NOUGHT:
      System.out.println("O wins!");
      break;
    case CROSS:
      System.out.println ("X wins!");
      break;
    case 0:
      System.out.println("Tie.");
      break;
}
}    
static void createBoard (int val, int row, int col)
throws IllegalArgumentException {
if (gameboard[row][col] == EMPTY)
gameboard[row][col] = val;
else throw new 
IllegalArgumentException("Player already there!");
}

static void displayBoard() {
for(int r = 0; r < 3; r++){
System.out.print("|");
for (int c = 0; c < 3; c++)
{
switch(gameboard[r][c]) {
case NOUGHT:
  System.out.print("O");
break;
case CROSS:
  System.out.print("X");
break;
default:      //Empty
  System.out.print(" ");
}
System.out.print("|");
}
System.out.println("\n-----\n");
}
}
static void createBoard (int rows, int cols) {
    int gameboard[][] = new int[3][3];
}

static int winOrTie() {
//TODO Determine whether X or O won or there is a tie
//To check if NOUGHT wins horizontally
if (gameboard [0][0] == NOUGHT && gameboard[0][1] == NOUGHT && gameboard[0][2] == NOUGHT)
return NOUGHT;
else if (gameboard[1][0] == NOUGHT && gameboard[1][1] == NOUGHT && gameboard[1][2] == NOUGHT )
return NOUGHT;
else if (gameboard[2][0] == NOUGHT && gameboard[2][1] == NOUGHT && gameboard[2][2] == NOUGHT)
return  NOUGHT;
//To check if NOUGHT wins vertically
if (gameboard[0][0] == NOUGHT && gameboard[1][0] == NOUGHT && gameboard[2][0] == NOUGHT)
return NOUGHT;
else if (gameboard[0][1] == NOUGHT && gameboard[1][1] == NOUGHT && gameboard[2][1] == NOUGHT)
return NOUGHT;
else if(gameboard[0][2] == NOUGHT && gameboard[1][2] == NOUGHT && gameboard[2][2] == NOUGHT)
return NOUGHT;
//To check if NOUGHT wins diagonally
if (gameboard[0][0] == NOUGHT && gameboard[1][1] == NOUGHT && gameboard[2][2] == NOUGHT)
return NOUGHT;
else if (gameboard[0][2] == NOUGHT && gameboard[1][1] == NOUGHT && gameboard[2][0] == NOUGHT)
return NOUGHT;
//To check if CROSS wins horizontally
else if (gameboard[0][0] == CROSS && gameboard[0][1] == CROSS && gameboard[0][2] == CROSS)
return CROSS;
else if(gameboard[1][0] == CROSS && gameboard[1][1] == CROSS && gameboard[1][2] == CROSS)
return CROSS;
else if (gameboard[2][0] == CROSS && gameboard[2][1] == CROSS && gameboard[2][2] == CROSS)
return CROSS;
//To check if CROSS wins vertically
else if (gameboard[0][0] == CROSS && gameboard[1][0] == CROSS && gameboard[2][0] == CROSS)
return CROSS;
else if (gameboard[0][1] == CROSS && gameboard[1][1] == CROSS && gameboard[2][1] == CROSS)
return CROSS;
else if (gameboard[0][2] == CROSS && gameboard[1][2] == CROSS && gameboard[2][2] == CROSS)
return CROSS;
//To check if CROSS wins diagonally
else if (gameboard[0][0] == CROSS && gameboard[1][1] == CROSS && gameboard[2][2] == CROSS)
return CROSS;
else if (gameboard[0][2] == CROSS && gameboard[1][1] == CROSS && gameboard[2][0] == CROSS)
return CROSS;
else
return -2;
}

}
